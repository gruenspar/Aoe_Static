<?xml version="1.0"?>
<!--
/**
 * Template hints
 *
 * @author Fabrizio Branca <fabrizio.branca@aoemedia.de>
 * @author Andr√© Herrn <info@andre-herrn.de> (Thanks, for making border colors configurable)
 */
-->
<config>
    <sections>
        <system>
            <groups>
                <aoe_static>
                    <label>Varnish Configuration (Aoe_Static)</label>
                    <frontend_type>text</frontend_type>
                    <sort_order>200</sort_order>
                    <show_in_default>1</show_in_default>
                    <show_in_website>1</show_in_website>
                    <show_in_store>1</show_in_store>
                    <fields>
                        <cache_actions translate="label">
                            <label>Cacheable actions</label>
                            <comment><![CDATA[Commaseparated list of <b>"&lt;route&gt;_&lt;controller&gt;_&lt;action&gt;;&lt;lifeTimeInSeconds&gt;" </b> The output generated from these actions will be cached by Varnish.]]>
                            </comment>
                            <frontend_type>textarea</frontend_type>
                            <sort_order>100</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </cache_actions>
                        <purge_hosts translate="label">
                            <label>Hosts to purge</label>
                            <comment><![CDATA[Enter the IPs of the varnish servers where the purge requests should be posted on. Seperated by linebreaks. Leave empty to use store url.]]></comment>
                            <frontend_type>textarea</frontend_type>
                            <sort_order>250</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </purge_hosts>
                        <purge_syncroniously translate="label">
                            <label>Purge synconiously</label>
                            <comment><![CDATA[If on, cache is purge imidiatly upon magento cache refesh, if off, cache is only marked to be purged and a cron job will do the dirty work.]]>
                            </comment>
                            <frontend_type>select</frontend_type>
                            <source_model>adminhtml/system_config_source_yesno</source_model>
                            <sort_order>200</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </purge_syncroniously>
                        <auto_rebuild_cache translate="label">
                            <label>Auto rebuild cache</label>
                            <comment><![CDATA[ATTENTION! This does not work in syncron mode. Varnish-Cache is not only purged but will be recreated so that customer always gets cached content.]]>
                            </comment>
                            <frontend_type>select</frontend_type>
                            <source_model>adminhtml/system_config_source_yesno</source_model>
                            <sort_order>300</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </auto_rebuild_cache>
                        <page_size translate="label">
                            <label>Number of purges at once</label>
                            <comment><![CDATA[in asyncronious mode]]>
                            </comment>
                            <frontend_type>text</frontend_type>
                            <validate>validate-number</validate>
                            <sort_order>400</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </page_size>
                        <page_count translate="label">
                            <label>Number of pages to process every cron run</label>
                            <comment><![CDATA[in asyncronious mode]]>
                            </comment>
                            <frontend_type>text</frontend_type>
                            <validate>validate-number</validate>
                            <sort_order>500</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </page_count>
                        <customer_blocks translate="label">
                            <label>Dynamic Customer Blocks</label>
                            <frontend_type>textarea</frontend_type>
                            <sort_order>150</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                            <comment><![CDATA[Comma separated list of all blocks that should be refreshed via AJAX request. You can also add a static block that is sent to cache instead of regular content separated by semicollon.<br />e. G. top.links;top_links_template]]></comment>
                        </customer_blocks>
                        <write_to_database translate="label">
                            <label>Write URL information to database</label>
                            <comment><![CDATA[If on, varnish state will be logged in the database. Default: true. Disable during high load.]]>
                            </comment>
                            <frontend_type>select</frontend_type>
                            <source_model>adminhtml/system_config_source_yesno</source_model>
                            <sort_order>550</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>0</show_in_store>
                        </write_to_database>
                        <use_session_storage translate="label">
                            <label>Use client session storage</label>
                            <comment><![CDATA[Client performance improvement: Store dynamic data in session storage and avoid phone call AJAX request.]]>
                            </comment>
                            <frontend_type>select</frontend_type>
                            <source_model>adminhtml/system_config_source_yesno</source_model>
                            <sort_order>600</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </use_session_storage>
                        <session_storage_store_blocks translate="label">
                            <label>Blocks to store in session storage</label>
                            <comment>
                                <![CDATA[
                                    Provide names of blocks to store in session storage to improve performance.
                                    Separate by \n or ,
                                ]]></comment>
                            <frontend_type>textarea</frontend_type>
                            <sort_order>605</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </session_storage_store_blocks>
                        <session_storage_clear_groups translate="label">
                            <label>Session storage block groups</label>
                            <comment>
                                <![CDATA[
                                    Configure which blocks to clear from session storage when certain events occur.
                                    Group names: cart, customer. Format: <br />
                                    <code>
                                        group_name_1:block_1,block_2<br/>
                                        group_name_2:block_3
                                    </code><br /><br />

                                    Example:<br />
                                    <code>
                                        cart:header.cart<br />
                                        customer:header.login_link
                                    </code>
                                ]]></comment>
                            <frontend_type>textarea</frontend_type>
                            <sort_order>610</sort_order>
                            <show_in_default>1</show_in_default>
                            <show_in_website>1</show_in_website>
                            <show_in_store>1</show_in_store>
                        </session_storage_clear_groups>
                    </fields>
                </aoe_static>
            </groups>
        </system>
    </sections>
</config>
